!function($){function createURL(path,base=window.location.origin){try{return new URL(path)}catch(err){return new URL(path,base)}}let defaults=Object.freeze({name:"otp",chars:4,regex:new RegExp("^[a-zA-Z0-9]{1,1}","g"),animation:{fade:600,position:600},fetch:{requestOTP:{url:"http://localhost:3001/api/request.json",options:{method:"GET",headers:{"Content-Type":"application/json"}},onRequest:function(res){var res=res.duration,compensation=(Date.now()-this.requested)/2;this.duration=res,this.expires=new Date(this.requested+(this.duration-compensation)).getTime()}},validateOTP:{url:"http://localhost:3001/api/validate.json",options:{method:"GET",headers:{"Content-Type":"application/json"}},onValidate:function(res){return"valid"in res&&!0===res.valid}}},i18n:{title:"Σύνδεση",subtitle:"Παρακαλώ εισάγετε τον κωδικό<br/>μιας χρήσης που σας έχει αποσταλλεί.",label:"Κωδικός μια χρήσης",resend:"Πατήστε εδώ για αποστολή νέου κωδικού.",validate:"ΣΥΝΕΧΕΙΑ",cancel:"ΚΛΕΙΣΙΜΟ",expired:"O κωδικός που στάλθηκε έχει λήξει.<br/>",invalid:"O κωδικός δεν είναι σωστός."},events:{}});$.fn.OTP=function(options={}){options=$.extend(!0,{},defaults,options);let charArr=[],instance={},{name,chars,regex,i18n,animation,events}=options;var{title,subtitle,label,expired,invalid,resend,cancel,validate}=i18n;function onSubmit(evt){evt.preventDefault(),evt.stopImmediatePropagation(),instance.show()}return instance.interval=null,instance.duration=null,instance.requested=null,instance.expires=null,instance.options=options,instance.active=!1,instance.$otp=$(`

            <div class="otp-bg">
                <div class="otp-modal">
                    <div class="otp-modal-header">
                        <h3 class="otp-title">${title}</h3>
                    </div>
                    <div class="otp-modal-body">
                        <p class="otp-subtitle">${subtitle}</p>
                        <svg width="64" height="64" viewBox="0 0 128 128" class="otp-timeout">
                            <circle class="bg"></circle>
                            <circle class="fg"></circle>
                        </svg>
                        <label class="otp-label">${label}</label>
                        <div class="otp-char-container">
                            ${(()=>{var arr=[];for(let i=0;i<chars;i++)arr.push(`<input class="otp-char otp-char-${i}" type="text" maxlength="1" autocorrect="off" autocomplete="off" />`);return arr.join("\n")})()}
                        </div>
                        <div class="otp-alert otp-invalid">${invalid}</div>
                        <div class="otp-alert otp-expired">${expired}<span class="otp-resend-btn">${resend}</span></div>
                    </div>
                    <div class="otp-modal-footer">
                        ${events.onCancelClick instanceof Function?`<button class="otp-cancel-btn">${cancel}</button>`:""}
                        <button class="otp-validate-btn" disabled>${validate}</button>
                    </div>
                </div>
                <input class="otp-input" name="${name}" type="hidden" />
            </div>
            
        `),instance.$container=this,instance.$form=instance.$container.closest("form"),instance.$modal=instance.$otp.find(".otp-modal"),instance.$timeout=instance.$otp.find(".otp-timeout"),instance.$chars=instance.$otp.find(".otp-char"),instance.$input=instance.$otp.find(".otp-input"),instance.$resend=instance.$otp.find(".otp-resend-btn"),instance.$cancel=instance.$otp.find(".otp-cancel-btn"),instance.$validate=instance.$otp.find(".otp-validate-btn"),instance.$chars.on("keydown",function(evt){"tab"===evt.key.toLowerCase()&&(evt.preventDefault(),evt.stopImmediatePropagation(),(evt=$(this).next(".otp-char")).length)&&(evt.focus(),evt.get(0).setSelectionRange(0,0))}),instance.$chars.on("keypress",function(evt){null===evt.key.match(regex)&&(evt.preventDefault(),evt.stopImmediatePropagation())}),instance.$chars.on("input",function(evt){var $this=$(this),index=$this.index(),$this=$this.val();$this.length&&(charArr[index]=$this,instance.$input.val(charArr.join("")),instance.$input.trigger("otp:change"))}),instance.$chars.on("keyup",function(evt){let $this=$(this),{selectionStart,selectionEnd}=this;switch(evt.key.toLowerCase()){case"backspace":var index=$this.index(),$prev=$this.prev(".otp-char");0!==selectionStart&&0!==selectionEnd||(evt.preventDefault(),evt.stopImmediatePropagation()),$prev.length&&($prev.focus(),$prev.get(0).setSelectionRange(1,1)),charArr[index]="",instance.$input.val(charArr.join("")),instance.$input.trigger("otp:change");break;case"delete":{let index=$this.index();var value,$prev=$this.nextAll(".otp-char");$prev.length&&(0!==selectionStart&&0!==selectionEnd||(value=$this.next().val(),charArr[index]=value,$this.val(value)),$prev.each(function(index,el){var el=$(el),value=el.next().val(),$next=el.next(".otp-char");$next.length&&$next.val()?el.val($next.val()):el.val(""),$this.get(0).setSelectionRange(selectionStart,selectionEnd),charArr[index]=value}),instance.$input.val(charArr.join("")),instance.$input.trigger("otp:change"));break}case"arrowleft":case"arrowright":case"tab":break;default:$this.val().length&&(index=$this.next(".otp-char")).length&&(index.focus(),index.get(0).setSelectionRange(0,0))}}),instance.$input.on("otp:change",function(evt){null!==instance.expires&&Date.now()<instance.expires&&($(this).val().length===chars?instance.$validate.prop("disabled",!1):instance.$validate.prop("disabled",!0))}),instance.show=async function(f=()=>{}){if(!instance.active){try{instance.active=!0,instance.requested=Date.now(),await instance.request(),instance.interval=setInterval(()=>{Date.now()>=instance.expires&&(clearInterval(instance.interval),instance.$validate.prop("disabled",!0),instance.$otp.addClass("expired"))},1e3),instance.$timeout.css("animation-duration",instance.duration+"ms"),instance.$otp.addClass("visible")}catch(err){return clearInterval(instance.interval),instance.$resend.prop("disabled",!1),instance.$otp.removeClass("visible expired invalid"),instance.$timeout.css("animation-duration",""),instance.interval=null,instance.duration=null,instance.requested=null,instance.expires=null,instance.active=!1,void console.error(`An error occurred because of ${err.message}, while requesting an one time password!`)}instance.$otp.trigger("otp:show"),instance.$otp.stop(!0,!1).fadeIn(animation.fade),instance.$modal.stop(!0,!1).animate({transform:50,top:"50%"},{duration:animation.position,step:function(now,fx){"transform"===fx.prop&&instance.$modal.css("transform",`translateX(-50%) translateY(${now-100}%)`)},complete:function(){f instanceof Function&&f(),instance.$otp.trigger("otp:shown")}})}},instance.hide=function(f=()=>{}){instance.active&&(instance.$otp.trigger("otp:hide"),instance.$modal.stop(!0,!1).animate({transform:50,top:"0%"},{duration:animation.position,step:function(now,fx){"transform"===fx.prop&&instance.$modal.css("transform",`translateX(-50%) translateY(-${50+now}%)`)}}),instance.$otp.stop(!0,!1).fadeOut(animation.fade,function(){clearInterval(instance.interval),instance.$otp.removeClass("visible expired invalid"),instance.$timeout.css("animation-duration",""),instance.interval=null,instance.duration=null,instance.requested=null,instance.expires=null,instance.active=!1,f instanceof Function&&f(),instance.$otp.trigger("otp:hidden")}))},instance.destroy=function(){instance.$form.length&&instance.$form.off("submit",onSubmit),this.$container.removeData("otp"),this.$otp.remove()}.bind(instance),instance.refresh=function(){this.destroy(),this.$container.OTP(options)}.bind(instance),instance.request=async function(){var requestOTP=this.options.fetch.requestOTP,requestOTP=await(await fetch(requestOTP.url,requestOTP.options)).json();this.options.fetch.requestOTP.onRequest.call(this,requestOTP)}.bind(instance),instance.validate=async function(){try{var url,payload,data,validateOTP=this.options.fetch.validateOTP;if("post"===validateOTP.options.method.toLowerCase())return url=createURL(validateOTP.url),payload=JSON.stringify({[name]:instance.$input.val()}),data=await(await fetch(url,{...validateOTP.options,body:payload})).json(),this.options.fetch.validateOTP.onValidate.call(this,data);{let url=createURL(validateOTP.url),resp=(url.searchParams.set(name,instance.$input.val()),await fetch(url,validateOTP.options)),data=await resp.json();return this.options.fetch.validateOTP.onValidate.call(this,data)}}catch(err){console.error("Error while validating an one time password: "+err.message)}return!1}.bind(instance),instance.$resend.on("click",async function(evt){try{clearInterval(instance.interval),instance.$otp.removeClass("visible expired invalid"),instance.$timeout.css("animation-duration",""),instance.$chars.val(""),instance.$input.val(""),instance.interval=null,instance.duration=null,instance.requested=null,instance.expires=null,instance.requested=Date.now(),instance.$resend.prop("disabled",!0),await instance.request(),instance.$resend.prop("disabled",!1),instance.$validate.prop("disabled",!1),instance.interval=setInterval(()=>{Date.now()>=instance.expires&&(clearInterval(instance.interval),instance.$validate.prop("disabled",!0),instance.$otp.addClass("expired"))},1e3),instance.$timeout.css("animation-duration",instance.duration+"ms"),instance.$otp.addClass("visible")}catch(err){clearInterval(instance.interval),instance.$resend.prop("disabled",!1),instance.$otp.removeClass("visible expired invalid"),instance.$timeout.css("animation-duration",""),instance.interval=null,instance.duration=null,instance.requested=null,instance.expires=null,console.error("Error while requesting a new one time password: "+err.message)}}),instance.$cancel.length&&instance.$cancel.on("click",function(evt){events.onCancelClick instanceof Function&&events.onCancelClick.call(this,evt,instance)}),instance.$form.length?(instance.$form.on("submit",onSubmit),instance.$validate.on("click",async function(evt){evt.preventDefault(),evt.stopImmediatePropagation(),await instance.validate()?instance.hide(()=>{instance.$otp.trigger("otp:valid"),instance.$form.off("submit",onSubmit).submit()}):(instance.$otp.trigger("otp:invalid"),instance.$otp.addClass("invalid"))})):instance.$validate.on("click",async function(evt){evt.preventDefault(),evt.stopImmediatePropagation(),await instance.validate()?instance.hide(()=>{instance.$otp.trigger("otp:valid")}):(instance.$otp.trigger("otp:invalid"),instance.$otp.addClass("invalid"))}),instance.$container.data("otp",instance),$(document.body).append(instance.$otp),instance.$container}}(jQuery);