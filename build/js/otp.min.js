!function($){let defaults={name:"otp",length:4,fetch:{requestOTP:{url:"http://localhost:3001/api/request.json",options:{method:"GET",headers:{"Content-Type":"application/json"}}},validateOTP:{url:"http://localhost:3001/api/validate.json",options:{method:"GET",headers:{"Content-Type":"application/json"}}}},i18n:{title:"Σύνδεση",label:"Κωδικός μια χρήσης",help:"Παρακαλώ εισάγετε τον κωδικό μιας χρήσης που σας έχει αποσταλλεί.",resend:"ΕΠΑΝΑΠΟΣΤΟΛΗ",validate:"ΣΥΝΕΧΕΙΑ"},events:{onRequest:function(res){res=res.duration;this.duration=res,this.requested=Date.now(),this.expires=new Date(this.requested+this.duration)},onValidate:function(res){return"valid"in res&&!0===res.valid}}};$.fn.OTP=function(options=defaults){let instance={},{name,length,i18n}=options;var{title,label,help,resend,validate}=i18n;return instance.$container=this,instance.duration=null,instance.requested=null,instance.expires=null,instance.options=options,instance.visible=!1,instance.$form=this.closest("form"),instance.$otp=$(`

            <div class="otp-bg">
                <div class="otp-modal">
                    <div class="otp-modal-header">
                        <h3 class="opt-title-header">${title}</h3>
                        <svg width="64" height="64" viewBox="0 0 128 128" class="otp-timeout">
                            <circle class="bg"></circle>
                            <circle class="fg"></circle>
                        </svg>
                    </div>
                    <div class="otp-modal-body">
                        <label class="otp-label-body">${label}</label>
                        <input class="otp-input-body" type="text" name="${name}" maxlength="${length}" autocorrect="off" autocomplete="off" style="max-width:${54.5*length}px" value=""/>
                        <small class="otp-help-body">${help}</small>
                    </div>
                    <div class="otp-modal-footer">
                        <button class="otp-resend-btn-footer">${resend}</button>
                        <button class="otp-validate-btn-footer">${validate}</button>
                    </div>
                </div>
            </div>

        `),instance.$modal=instance.$otp.find(".otp-modal"),instance.$timeout=instance.$otp.find(".otp-timeout"),instance.$input=instance.$otp.find(".otp-input-body"),instance.$resend=instance.$otp.find(".otp-resend-btn-footer"),instance.$validate=instance.$otp.find(".otp-validate-btn-footer"),instance.show=async function(){if(!instance.visible){try{instance.visible=!0,await instance.request(),instance.$timeout.css("animation-duration",instance.duration+"ms"),instance.$otp.addClass("visible")}catch(err){return instance.visible=!1,instance.$otp.removeAttr("style"),instance.$otp.removeClass("visible"),void console.error(`An error occurred because of ${err.message}, while requesting an one time password!`)}instance.$otp.stop(!0,!1).fadeIn(function(){instance.$modal.stop(!0,!1).animate({transform:"translateX(-50%) translatey(-50%)",top:"50%"},{duration:300,complete:function(){}})})}},instance.hide=function(){instance.visible&&instance.$modal.stop(!0,!1).animate({transform:"translateX(-50%) translatey(-100%)",top:"0%"},{duration:300,complete:function(){instance.$otp.stop(!0,!1).fadeOut(function(){instance.visible=!1,instance.$otp.removeAttr("style"),instance.$otp.removeClass("visible")})}})},instance.destroy=function(){this.$container.removeData("otp"),this.$otp.remove()}.bind(instance),instance.refresh=function(){this.destroy(),this.$container.AthexOTP(options)}.bind(instance),instance.request=async function(){var requestOTP=this.options.fetch.requestOTP,requestOTP=await(await fetch(requestOTP.url,requestOTP.options)).json();this.options.events.onRequest.call(this,requestOTP)}.bind(instance),instance.validate=async function(){try{var validationCFG=this.options.fetch.validationCFG,data=await(await fetch(validationCFG.url,validationCFG.options)).json();return this.options.events.onValidate.call(this,data)}catch(err){console.error(`An error occurred because of ${err.message}, while validating an one time password!`)}return!1}.bind(instance),instance.$resend.on("click",function(evt){instance.request()}),instance.$input.on("click keyup focus",function(evt){console.log("->",this.selectionStart),this.selectionStart>=length&&(this.setSelectionRange(length-1,length-1),this.blur())}),instance.$form.length&&instance.$form.on("submit",function(evt){evt.preventDefault(),evt.stopImmediatePropagation(),instance.validate()?instance.$form.submit():alert("Error validating!")}),this.data("otp",instance),this.append(instance.$otp),this}}(jQuery);